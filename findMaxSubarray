#include <iostream>

using namespace std;


pair<pair<int,int>,int> fmcsubarray (int A[], int l, int m, int h){
int lsum =-99999;
int sum=0;
int i,j,maxl,maxr,rsum;

for(i=m;i>=l;i--){
    sum=sum+A[i];
    if (sum>lsum){
        lsum=sum;
        maxl=i;
    }
}
rsum=-99999;
sum=0;
for(j=m+1;j<h;j++){
    sum=sum+A[j];
    if(sum>rsum){
        rsum=sum;
        maxr=j;
    }
}

    return pair<pair<int,int>,int>(pair<int,int>(maxl,maxr),rsum+lsum);
}

pair<pair<int,int>,int> fmaxsubarray (int a[],int l, int h)
{
    if(h==l)
        return pair<pair<int,int>,int>(pair<int,int>(l,h),a[l]);
    int mid=(l+h)/2;
         pair<pair<int,int>,int> vall=fmaxsubarray(a,l,mid);
        pair<pair<int,int>,int> valr=fmaxsubarray(a,mid+1,h);
        pair<pair<int,int>,int> valc=fmcsubarray(a,l,mid,h);
        if(vall.second >= valr.second and vall.second>=valc.second)
            return vall;
        else if(vall.second <= valr.second and valr.second<=valc.second)
            return valr;
        return valc;

}

int main()
{

    int a[16]={-13,-3,-25,-20,-3,-16,-23,-18,-20,-7,-12,-5,-22,-15,-4,-7};
    cout<<fmaxsubarray(a,0,16).second;
    return 0;
}
